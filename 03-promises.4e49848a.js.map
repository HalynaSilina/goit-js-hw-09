{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCaQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEnC,SAAuCC,GACrCA,EAAEC,iBACF,MAAOC,UAAWb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IAAUL,EAAEM,cAC3CC,QAAQC,IAAKR,EAAEM,cAAcJ,UAC7B,IAAIO,EAAYC,OAAOP,EAAMQ,OAC7B,MAAMC,EAAWF,OAAON,EAAKO,OACvBE,EAAaH,OAAOL,EAAOM,OACjC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAYC,GAAY,EACzD3B,EAAc2B,EAAUL,GACrBM,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,KACjBJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAW,CAC5D6B,QAAO,IACTC,cAAc,MAGjBC,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,KAClBJ,EAAA+B,OAAOK,QAAQ,sBAAoBjC,QAAeC,MAAW,CAC3D6B,QAAS,IACTC,cAAc,MAGpBV,GAAaG,EAEfZ,EAAEM,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst createPromiseForm = document.querySelector('.form');\n\ncreatePromiseForm.addEventListener('submit', handleCreatePromiseFormSubmit);\n\nfunction handleCreatePromiseFormSubmit(e) {\n  e.preventDefault();\n  const {elements: {delay, step, amount}}= e.currentTarget;\n  console.log (e.currentTarget.elements);\n  let userDelay = Number(delay.value);\n  const userStep = Number(step.value);\n  const userAmount = Number(amount.value);\n  for (let position = 1; position <= userAmount; position += 1) {\n    createPromise(position, userDelay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n          clickToClose: true,\n        })\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n          clickToClose: true,\n        })\n      );\n    userDelay += userStep;\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","console","log","userDelay","Number","value","userStep","userAmount","position1","then","Notify","success","timeout","clickToClose","catch","failure","reset"],"version":3,"file":"03-promises.4e49848a.js.map"}